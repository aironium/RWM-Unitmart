[core]
name: unitmart_slot
displayText: UnitMart Parcel
displayDescription: Can hold up to 10 units regardless of their slot requirements\n-Automatically calculates the total price of the units\n-Self-delivers when a customer orders it.\n-Does not accept transport-type units.
class: CustomUnitMetadata
price: 0
maxHp: 300
mass: 1000
buildSpeed: 15s
techLevel: 1
radius: 30
isBuilding: true
softCollisionOnAll: 2
isBio: false
explodeOnDeath: true
numBitsOnDeath: 0
maxTransportingUnits: 10
transportUnitsEachUnitAlwaysUsesSingleSlot: true
#transportUnitsBlockOtherTransports: false
transportUnitsBlockAirAndWaterUnits: false
tags: unitmart_slot
transportUnitsKillOnDeath: false
autoTriggerCooldownTime:0.005s
autoTriggerCooldownTime_allowDangerousHighCPU: true
#exit_moveAwayAmount: 200
showInEditor: false
disableAllUnitCollisions: true
canNotBeDamaged: true
#isUnselectable: true
@memory origin:unit
@memory target:unit
@memory originDir:string

[ai]
useAsTransport: true

[graphics]
total_frames: 1
image: slot.png
#image: wrapper.png
image_wreak:  NONE
image_turret: NONE
image_shadow: NONE
shadowOffsetX:1
shadowOffsetY:1
isVisible: true
drawLayer: ground2
rotate_with_direction: false
animation_direction_units: 360
animation_direction_starting: 90
showTransportBar: false
dustEffect: true

[attack]
canAttack: false
canAttackFlyingUnits: false
canAttackLandUnits: true
canAttackUnderwaterUnits: false
maxAttackRange: 0
shootDelay: 1

[attachment_1]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_2]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_3]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_4]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_5]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_6]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_7]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_8]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_9]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[attachment_10]
x: 0
y: 0
isVisible: false
addTransportedUnits: true
setDrawLayerOnBottom: true
isUnselectable: true
height: -100
canAttack: false

[core]
@memory totalPrice:number
@memory 2ndHandPrice:number

[action_databox]
text: Parcel Info ($%{memory.totalPrice})
pos: 0
isActive: false
addResources: hp = 1
buildSpeed: 0s
price: 0
displayType: infoOnly
description: """
Total Cost: $%{memory.totalPrice}\n
Second Hand Cost: $%{memory.2ndHandPrice}\n
(Customer will pay total cost, you will receive second hand cost with 20% cut)\n\n
Contents:\n
[%{select(self.attachment(slot=1) != nullUnit, self.attachment(slot=1), null)}] \n 
[%{select(self.attachment(slot=2) != nullUnit, self.attachment(slot=2), null)}] \n 
[%{select(self.attachment(slot=3) != nullUnit, self.attachment(slot=3), null)}] \n 
[%{select(self.attachment(slot=4) != nullUnit, self.attachment(slot=4), null)}] \n
[%{select(self.attachment(slot=5) != nullUnit, self.attachment(slot=5), null)}] \n 
[%{select(self.attachment(slot=6) != nullUnit, self.attachment(slot=6), null)}] \n 
[%{select(self.attachment(slot=7) != nullUnit, self.attachment(slot=7), null)}] \n 
[%{select(self.attachment(slot=8) != nullUnit, self.attachment(slot=8), null)}] \n
[%{select(self.attachment(slot=9) != nullUnit, self.attachment(slot=9), null)}] \n
[%{select(self.attachment(slot=10) != nullUnit, self.attachment(slot=10), null)}]
"""

[template_slotBox]
textAddUnitName: unitref self.attachment(slot=${aSlot})
descriptionAddFromUnit: unitref self.attachment(slot=${aSlot})
descriptionAddUnitStats: unitref self.attachment(slot=${aSlot})
unitShownInUI: unitref self.attachment(slot=${aSlot})
isActive: false
displayType: infoOnly
iconExtraColor: #ffff00
pos: ${aSlot + 10}
isVisible: if self.attachment(slot=${aSlot}) != nullUnit
addResources: hp = 1

[action_slotBox1]
@copyFromSection: template_slotBox
@define aSlot: 1

[action_slotBox2]
@copyFromSection: template_slotBox
@define aSlot: 2

[action_slotBox3]
@copyFromSection: template_slotBox
@define aSlot: 3

[action_slotBox4]
@copyFromSection: template_slotBox
@define aSlot: 4

[action_slotBox5]
@copyFromSection: template_slotBox
@define aSlot: 5

[action_slotBox6]
@copyFromSection: template_slotBox
@define aSlot: 6

[action_slotBox7]
@copyFromSection: template_slotBox
@define aSlot: 7

[action_slotBox8]
@copyFromSection: template_slotBox
@define aSlot: 8

[action_slotBox9]
@copyFromSection: template_slotBox
@define aSlot: 9

[action_slotBox10]
@copyFromSection: template_slotBox
@define aSlot: 10

[hiddenAction_priceCalc]
autoTrigger: if memory.totalPrice != (self.attachment(slot=1).priceCredits + self.attachment(slot=2).priceCredits + self.attachment(slot=3).priceCredits + self.attachment(slot=4).priceCredits + self.attachment(slot=5).priceCredits + self.attachment(slot=6).priceCredits + self.attachment(slot=7).priceCredits + self.attachment(slot=8).priceCredits + self.attachment(slot=9).priceCredits + self.attachment(slot=10).priceCredits)

setUnitMemory: """
totalPrice =
self.attachment(slot=1).priceCredits+
self.attachment(slot=2).priceCredits+ 
self.attachment(slot=3).priceCredits+
self.attachment(slot=4).priceCredits+ 
self.attachment(slot=5).priceCredits+ 
self.attachment(slot=6).priceCredits+ 
self.attachment(slot=7).priceCredits+ 
self.attachment(slot=8).priceCredits+ 
self.attachment(slot=9).priceCredits+ 
self.attachment(slot=10).priceCredits, 

2ndHandPrice =  
(self.attachment(slot=1).priceCredits * 0.8)+
(self.attachment(slot=2).priceCredits * 0.8)+ 
(self.attachment(slot=3).priceCredits * 0.8)+
(self.attachment(slot=4).priceCredits * 0.8)+ 
(self.attachment(slot=5).priceCredits * 0.8)+ 
(self.attachment(slot=6).priceCredits * 0.8)+ 
(self.attachment(slot=7).priceCredits * 0.8)+ 
(self.attachment(slot=8).priceCredits * 0.8)+ 
(self.attachment(slot=9).priceCredits * 0.8)+ 
(self.attachment(slot=10).priceCredits * 0.8)
"""

[turret_emitter]
x: 0
y: 0
canShoot: false
projectile: 1

[projectile_1]
life: 10
instant: true
targetGround: true
targetGroundSpread: 5
areaDamage: 0
friendlyFire: only-ignoreEnemy
pushForce: 0.1
pushVelocity: 0.1
##unloadUpToXUnitsFromSource: 9999
teleportSource: true
explodeEffect: NONE
deflectionPower: -1
spawnUnit: unitmart_delivery_wrapper(transportedUnitsToTransfer=10), unitmart_fishbone

[core]
@memory customer:unit

[hiddenAction_deliveryRequestReceived]
autoTriggerOnEvent: newMessage(withTag="onlineDelivery")
setUnitMemory: customer = eventData(name="customer", type="unit")
fireTurretXAtGround: emitter 
#fireTurretXAtGround_withTarget: eventData(name="customer", type="unit")
fireTurretXAtGround_withTarget: createMarker(x=200, y=200)
addResourcesWithLogic: credits = memory.2ndHandPrice
showQuickWarLogToPlayer: Someone bought a parcel. You earned $%{memory.2ndHandPrice}


[movement]
movementType: AIR
moveSpeed: 50
moveAccelerationSpeed: 100
moveDecelerationSpeed: 100
targetHeight: 1
targetHeightDrift: 0
maxTurnSpeed: 10
turnAcceleration: 10
joinsGroupFormations: false
moveIgnoringBody: true
